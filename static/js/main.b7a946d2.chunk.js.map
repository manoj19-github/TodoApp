{"version":3,"sources":["ToDoApp/ToDoItem.js","ToDoApp/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoItem","props","useState","line","setLine","className","style","cursor","type","onClick","name","textDecoration","items","text","class","updateFunc","id","delFunc","ToDoList","message","setMessage","localStorage","getItem","JSON","parse","mytask","setMytask","toggleSubmit","setToggleSubmit","update","setUpdate","useEffect","setItem","stringify","updateMessage","update_id","updateTxt","find","item","deleteMessage","delete_id","newMessage","filter","src","height","width","alt","placeholder","value","onChange","event","target","map","inputMessage","Date","getTime","toString","alert","textShadow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7a946d2.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction ToDoItem(props) {\r\n  const [line,setLine]=useState(false)\r\n  const ClickHandler_check=()=>{\r\n    setLine(!line)\r\n  }\r\n\r\n  return (\r\n\r\n      <li  className=\"list-group-item text-center mt-2  d-flex justify-content-between\">\r\n      <div className=\"custom-control custom-checkbox\" style={{cursor:'pointer'}}>\r\n        <input type=\"checkbox\" onClick={ClickHandler_check} name=\"\" className=\"custom-control-input\"  />\r\n      </div>\r\n      <div style={{textDecoration:line?'line-through':'none'}}>{props.items.text}</div>\r\n    <div style={{cursor:'pointer'}}><i class=\"fa fa-pencil\" aria-hidden=\"true\"  onClick={()=>props.updateFunc(props.items.id)}></i></div>\r\n      <div style={{cursor:'pointer'}}><i class=\"fa fa-trash\" aria-hidden=\"true\" onClick={()=>props.delFunc(props.items.id)}></i></div>\r\n      </li>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default ToDoItem\r\n","import React,{useState,useEffect} from 'react'\r\nimport ToDoItem from './ToDoItem'\r\n\r\nconst getMessage=()=>{\r\n  let mylist=localStorage.getItem('todoList')\r\n  if(mylist){\r\n      return JSON.parse(localStorage.getItem('todoList'))\r\n  }else{\r\n    return []\r\n  }\r\n}\r\n\r\nfunction ToDoList() {\r\n   const [message,setMessage]=useState('')\r\n   const [mytask,setMytask]=useState(getMessage())\r\n   const [toggleSubmit,setToggleSubmit]=useState(true)\r\n   const [update,setUpdate]=useState(null)\r\n\r\n  const addMessage=()=>{\r\n\r\n    if(!message){\r\n      alert(\"please fill any message\")\r\n    }\r\n    else if(!toggleSubmit && update && message){\r\n      setMytask(mytask.map((item)=>{\r\n        if(item.id===update){\r\n          return {...item,text:message}\r\n        }\r\n      }\r\n    ))\r\n    setToggleSubmit(true)\r\n    setMessage('')\r\n    setUpdate(null)\r\n\r\n    }\r\n    else{\r\n      const inputMessage={id:new Date().getTime().toString(),text:message}\r\n      setMytask([...mytask,inputMessage])\r\n      setMessage('')\r\n\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    localStorage.setItem('todoList',JSON.stringify(mytask))\r\n  },[mytask])\r\n  const updateMessage=(update_id)=>{\r\n    const updateTxt=mytask.find(item=>{\r\n      return item.id===update_id\r\n    })\r\n    setMessage(updateTxt.text)\r\n    setToggleSubmit(false)\r\n    setUpdate(updateTxt.id)\r\n  }\r\n  const deleteMessage=(delete_id)=>{\r\n    const newMessage=mytask.filter(item=>{\r\n      return item.id !== delete_id\r\n    })\r\n    setMytask(newMessage)\r\n  }\r\n  const clearAll=()=>{\r\n    setMytask([])\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    <div className=\"container-fluid todo_container \">\r\n\r\n      <div className=\"center_div\">\r\n        <div className=\"main_logo mx-auto\">\r\n\r\n          <img src=\"./images/download.png\" style={{height:'100%',width:'100%'}} alt=\"\" />\r\n\r\n        </div>\r\n        <div className=\"to-parent \">\r\n            <div className=\"input-group mt-3   \">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\" text-primary fa fa-pencil-square-o\" aria-hidden=\"true\"></span>\r\n              </div>\r\n              <input type=\"text\" placeholder=\"write your daily task\" value={message} onChange={(event)=>{setMessage(event.target.value)}} className=\"form-control\" />\r\n            <div className=\"input-group-append\">\r\n                <span className=\"input-group-text second_btn\" aria-hidden=\"true\"  onClick={addMessage}>\r\n\r\n                {\r\n                  toggleSubmit ?<i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>:<i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                }\r\n              </span>\r\n            </div>\r\n\r\n            </div>\r\n            <ul className=\"list-group\">\r\n               {\r\n                  mytask.map((item)=>{\r\n                    return <ToDoItem  items={item} delFunc={deleteMessage} updateFunc={updateMessage}/>\r\n                  })\r\n              }\r\n          </ul>\r\n          <button type=\"button\" className=\"btn btn-outline-primary mt-5\" onClick={clearAll}>Remove All Task</button>\r\n          <h4 className=\"text-center text-primary text-uppercase my-5 \">santra To do list</h4>\r\n          <p className=\"text-center text-white text-capitalize mt-3\" style={{textShadow:\"3px 5px 7px rgba(0,0,0,0.6),-3px -5px 7px rgba(0,0,0,0.6)\"}}>designed and developed by Manoj santra</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToDoList\r\n","\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './css/Todo.scss'\nimport ToDoList from './ToDoApp/ToDoList'\nfunction App() {\n  return (\n    <div className=\"App container-fluid\">\n      <ToDoList/>\n    </div>\n  );\n}\n\nexport default App;\n  \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}